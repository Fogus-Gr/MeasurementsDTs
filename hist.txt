    1  history -w
    2  nvidia-smi
    3  nvcc --version | grep "release"
    4  apt install nvidia-cuda-toolkit
    5  sudo apt install nvidia-cuda-toolkit
    6  sudo apt updare
    7  sudo apt update
    8  sudo apt install nvidia-cuda-toolkit
    9  nvcc --version | grep "release"
   10  python3
   11  nvidia-smi
   12  nvcc --version
   13  sudo apt upgrade
   14  nvcc --version
   15  pip list
   16  exit
   17  sudo restart
   18  sudo reset
   19  sudo shutdown --help
   20  sudo shutdown -r
   21  exit
   22  ls
   23  sudo apt install python3-venv
   24  cd MeasurementsDTs/
   25  python3 -m venv myenv
   26  source myenv/bin/activate
   27  pip install --help
   28  pip install -r requirements.txt 
   29  pip list
   30  source myenv/bin/activate
   31  pip list
   32  pip install -r requirements.txt 
   33  bash models/AlphaPose/build_extensions.sh
   34  wget "https://drive.google.com/uc?export=download&id=1p6bi10UybpUIcq5D2XDsgQRLPJIr2RyI" -O models/AlphaPose/pretrained_models/fast_res50_256x192.pth
   35  get "https://drive.google.com/uc?export=download&id=15SZwY2jAh1KqHwT-YO6_UByOsQD70RSr" -O models/MoveNet/movenet_multipose_lightning_256x256_FP32.bin
   36  wget "https://drive.google.com/uc?export=download&id=1k-9cUGcdH5ZFN1NcMvZrO0ApW241tboD" -O models/AlphaPose/detector/yolo/data/yolov3-spp.weights
   37  mkdir -p models/AlphaPose/detector/yolo/data/
   38  wget "https://drive.google.com/uc?export=download&id=1k-9cUGcdH5ZFN1NcMvZrO0ApW241tboD" -O models/AlphaPose/detector/yolo/data/yolov3-spp.weights
   39  nvcc --version
   40  sudo apt-get --purge remove "*cublas*" "cuda*"
   41  sudo apt-get autoremove
   42  sudo apt-get autoclean
   43  wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
   44  cd
   45  wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
   46  ll
   47  sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
   48  wget https://developer.download.nvidia.com/compute/cuda/12.1.0/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.0-530.30.02-1_amd64.deb
   49  sudo dpkg -i cuda-repo-ubuntu2004-12-1-local_12.1.0-530.30.02-1_amd64.deb
   50  sudo cp /var/cuda-repo-ubuntu2004-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/
   51  sudo apt-get update
   52  sudo apt-get -y install cuda
   53  exit
   54  nvcc --version
   55  sudo apt upgrade
   56  lscpu
   57  lsblk
   58  sudo fdisk -l
   59  sudo mkdir -p /boot/efi
   60  sudo mount /dev/vda2 /boot/efi
   61  sudo dpkg --configure -a
   62  sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --recheck
   63  sudo dpkg --configure -a
   64  sudo shutdown -r
   65  exit
   66  source myenv/bin/activate
   67  nvcc --version
   68  vim ~/.bashrc
   69  source ~/.bashrc
   70  nvcc --version
   71  nvcc --version | grep "release"
   72  nvidia-smi
   73  env
   74  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   75  source myenv/bin/activate
   76  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   77  pip install openvino-dev
   78  pip install openvino
   79  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   80  pip install easydict
   81  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   82  pip install pycocotools
   83  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   84  rm models/AlphaPose/pretrained_models/fast_res50_256x192.pth
   85  pip install gdown
   86  gdown --id 1p6bi10UybpUIcq5D2XDsgQRLPJIr2RyI -O models/AlphaPose/pretrained_models/fast_res50_256x192.pth
   87  head models/AlphaPose/pretrained_models/fast_res50_256x192.pth
   88  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   89  rm models/AlphaPose/detector/yolo/data/yolov3-spp.weights
   90  gdown --id 1k-9cUGcdH5ZFN1NcMvZrO0ApW241tboD -O models/AlphaPose/detector/yolo/data/yolov3-spp.weights
   91  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   92  history
   93  python3 main.py --method alphapose --input images/testImage.jpg --save_image
   94  pip freeze -r requirment.txt
   95  pip freeze -r requirments.txt
   96  pip freeze -r requirements.txt
   97  history > hist.txt
   98  git config --global user.email "kalpgiorgos@gmail.com"
   99  git config --global user.name "Your Name"
  100  git config --global user.name "George K"
  101  top
  102  btop
  103  clear
  104  top -c
  105  nvidia-smi 
  106  nvcc --version
  107  nvidia-smi
  108  sudo 
  109  sudo apt install nvidia-cuda-toolkit
  110  bash models/AlphaPose/build_extensions.sh
  111  cd MeasurementsDTs/
  112  bash models/AlphaPose/build_extensions.sh
  113  source ~/.bashrc
  114  bash models/AlphaPose/build_extensions.sh
  115  sudo apt-get install python3-tk
  116  nvidia-smi
  117  cd
  118  sudo nvidia-ctk runtime configure --runtime=docker
  119  sudo systemctl restart docker
  120  sudo docker run --rm --runtime=nvidia --gpus all ubuntu nvidia-smi
  121  nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json
  122  systemctl --user restart docker
  123  sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place
  124  exit
  125  docker pull pytorch/pytorch:2.4.1-cuda12.1-cudnn9-devel
  126  history | grep venv
  127  cd MeasurementsDTs/
  128  docker ps
  129  docker cp
  130  cd ..
  131  docker cp /home/user/MeasurementsDTs ad30132e5dcb:/workspace
  132  docker ps
  133  docker volume list
  134  docker image list
  135  docker commit ad30132e5dcb my_alphapose_image:latest
  136  docker image list
  137  history | grep run
  138  sudo docker run --rm --runtime=nvidia --gpus all my_alphapose_image nvidia-smi
  139  docker ps
  140  docker ps -a
  141  docker
  142  sudo docker run --rm --runtime=nvidia --gpus all my_alphapose_image
  143  sudo docker run --runtime=nvidia --gpus all my_alphapose_image
  144  docker ps
  145  docker ps -a
  146  docker ps
  147  sudo docker run --help
  148  sudo docker run --runtime=nvidia --gpus all -d my_alphapose_image
  149  docker ps
  150  docker ps -a
  151  docker start 5d58491df04d
  152  docker ps -a
  153  sudo docker run --runtime=nvidia --gpus all -d my_alphapose_image nvidia-smi
  154  docker ps -a
  155  sudo docker run --it --runtime=nvidia --gpus all my_alphapose_image nvidia-smi
  156  sudo docker run --runtime=nvidia --gpus all -i -t my_alphapose_image nvidia-smi
  157  sudo docker run --runtime=nvidia --gpus all -i -t my_alphapose_image /bash
  158  sudo docker run --runtime=nvidia --gpus all -i -t my_alphapose_image bash/
  159  sudo docker run --runtime=nvidia --gpus all -i -t my_alphapose_image bash/sh
  160  exit
  161  htop
  162  docker ps 
  163  docker image 
  164  docker image ls
  165  htop
  166  ll
  167  source myenv/bin/activate
  168  python3
  169  docker image list
  170  top
  171  htop
  172  docker top
  173  docker top 854db790f9c6
  174  docker stats  854db790f9c6
  175  nvidia-smi
  176  docker image ls
  177  docker ps -a --size
  178  dpkg -l | grep python3-tk
  179  python3
  180  uname -a
  181  lsb_release 
  182  lsb_release -a
  183  docker ps
  184  cat .ssh/authorized_keys 
  185  docker image ls
  186  sudo docker run --rm -it --runtime=nvidia --gpus all my_alphapose_runtime bash
  187  docker ps
  188  docker ps -a
  189  docker run --rm -it --runtime=nvidia --gpus all my_alphapose_runtime bash
  190  docker ps
  191  docker run --runtime=nvidia --gpus all my_alphapose_runtime
  192  docker run --runtime=nvidia --gpus all my_alphapose_runtime bash
  193  docker run -it --runtime=nvidia --gpus all my_alphapose_runtime bash
  194  docker pos
  195  docker ps
  196  docker run --rm pytorch/pytorch:2.4.1-cuda12.1-cudnn9-devel python3 --version
  197  docker run --rm pytorch/pytorch:2.4.1-cuda12.1-cudnn9-runtime python3 --version
  198  docker run -it --runtime=nvidia --gpus all my_alphapose_runtime bash
  199  docker pull docker run -it --rm pytorch/pytorch:2.1.0-cuda12.1-cudnn8-devel  /bin/bash
  200  docker pull pytorch/pytorch:2.1.0-cuda12.1-cudnn8-devel
  201  docker image list
  202  docker rmi e2c9d9f7c1dc
  203  docker image list
  204  du -h
  205  ds -h
  206  lsblk 
  207  du 
  208  df -h
  209  ncdu /
  210  apt install ncdu
  211  sudo apt install ncdu
  212  ncdu /
  213  ll
  214  rm cuda-repo-ubuntu2004-12-1-local_12.1.0-530.30.02-1_amd64.deb
  215  df -h
  216  docker info
  217  docker info --herlp
  218  docker info --help
  219  docker
  220  docker volume 
  221  docker volume prune
  222  docker system 
  223  docker system df
  224  docker system prune
  225  df -h
  226  docker image ls
  227  docker pull nvidia/cuda:12.4.1-devel-ubuntu20.04
  228  docker image ls
  229  docker run --runtime=nvidia --gpus all -it --rm 12.4.1-devel-ubuntu20.04  /bin/bash
  230  docker run --runtime=nvidia --gpus all -it --rm f82e92565c4a  /bin/bash
  231  docker run --runtime=nvidia --gpus all -it --rm nvidia/cuda:12.4.1-devel-ubuntu20.04  /bin/bash
  232  nvidia-smi
  233  nvcc --version
  234  docker run --runtime=nvidia --gpus all -it --rm nvidia/cuda:12.1.0-devel-ubuntu20.04  /bin/bash
  235  docker image ls
  236  docker run --runtime=nvidia --gpus all -it --rm my_alphapose_image  /bin/bash
  237  docker image ls
  238  docker system 
  239  docker system df
  240  docker system prune
  241  docker system df
  242  df -h
  243  exit
  244  sudo docker run --runtime=nvidia --gpus all my_alphapose_image -i -t
  245  docker rmi f82e92565c4a
  246  htop
  247  exit
  248  sudo docker run -it --runtime=nvidia --gpus all my_alphapose_image basht
  249  sudo docker run -it --runtime=nvidia --gpus all my_alphapose_image bash
  250  sudo docker run -it --runtime=nvidia --gpus all pytorch_cuda12.1_alphapose:latest bash
  251  sudo docker run -it --runtime=nvidia --gpus all alphapose_cuda12.1_ubuntu20.04:latest bash
  252  sudo docker run --shm-size=10g -it --runtime=nvidia --gpus all alphapose_cuda12.1_ubuntu20.04:latest bash
  253  sudo docker start --shm-size=10g -it --runtime=nvidia --gpus all mystifying_hermann  bash
  254  sudo docker run --shm-size=10g -it --runtime=nvidia --gpus all alphapose_cuda12.1_ubuntu20.04:latest bash
  255  exit
  256  docker image ls
  257  docker container list
  258  docker ps
  259  docker image ls
  260  ll
  261  docker ps
  262  docker cp
  263  docker cp 7a3aa0ce2d1e:/out/vis/ .
  264  ll
  265  mv vis/ MeasurementsDTs/vis/
  266  ll
  267  nvidia-smi
  268  watch nvidia-smi
  269  nvidia-smi
  270  htop
  271  watch -n 1 nvidia-smi
  272  nvtop
  273  apt install nvtop
  274  sudo apt install nvtop
  275  nvtop
  276  ll
  277  nvtop
  278  nvidia-smi
  279  docker top 7a3aa0ce2d1e
  280  docker stats 7a3aa0ce2d1e
  281  nvidia-smi
  282  nvtop
  283  du -h
  284  docker image ls
  285  docker rmi 134325a7c9ad
  286  docker system prune
  287  nvtop
  288  docker image ls
  289  df -h
  290  watch -n 1 nvidia-smi
  291  docker ps
  292  docker ps -a
  293  watch -n 1 nvidia-smi
  294  docker cp 
  295  docker cp 82afd7a873a3:/build/AlphaPose/results/ .
  296  docker cp 82afd7a873a3:/build/AlphaPose/results/ MeasurementsDTs/
  297  ll
  298  rm -rf results/
  299  rm -rf 1.jpg 
  300  ll
  301  cd MeasurementsDTs/
  302  ll
  303  rm 0.jpg 
  304  ll
  305  nvtop
  306  htop
  307  nvtop
  308  date
  309  nvtop
  310  docker cp 82afd7a873a3:/build/AlphaPose/results/ MeasurementsDTs/
  311  ll
  312  mv MeasurementsDTs/AlphaPose_video.mp4 AlphaPose_video.mp4
  313  ll
  314  rm -rf MeasurementsDTs/
  315  ll
  316  top -c
  317  code .
  318  nvtop
  319  exit
  320  nvtop
  321  exit
  322  ll
  323  rm -rf /tmp/*
  324  df -i
  325  pip install -U yt-dlp
  326  pip install numpy==1.23.5
  327  cat ~/.ssh/authorized_keys 
  328  nvidia-smi
  329  /bin/python3 /home/user/.cursor-server/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/user/.cursor-server/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/bash/envVars.txt
  330  vim .ssh/authorized_keys 
  331  sudo vim ~/.ssh/authorized_keys
  332  sudo ll ~/.ssh/
  333  sudo ls -ll  ~/.ssh/
  334  ll
  335  ll .ssh/
  336  du -h .vscode-server/
  337  ll
  338  cd .vscode-server/
  339  ll
  340  cat .cli.848b80aeb52026648a8ff9f7c45a9b0a80641e2e.log 
  341  ll data/
  342  ll data/Machine/
  343  ll data/User/
  344  ll data/logs/
  345  ll data/logs/20250523T071840/
  346  ll data/logs/20250523T071840/remoteagent.log 
  347  ll data/logs/20250523T071840/remoteTelemetry.log 
  348  tail data/logs/20250523T071840/remoteagent.log 
  349  tail data/logs/20250523T071840/remoteTelemetry.log 
  350  tail data/logs/20250523T071840/ptyhost.log 
  351  tail data/logs/20250523T071840/exthost1/remoteexthost.log 
  352  tail data/logs/20250523T071840/exthost1/output_logging_20250523T071844/1-EditorConfig.log 
  353  tail data/logs/20250523T071840/exthost1/output_logging_20250523T071844/remoteExtHostTelemetry.log
  354  tail data/logs/20250523T071840/exthost1/remoteExtHostTelemetry.log
  355  cd
  356  ll
  357  cat .profile 
  358  cat .bashrc 
  359  ll
  360  cd intel/
  361  ll
  362  cd
  363  cat .config/
  364  cat .config/cd
  365  exit
  366  git status
  367  git fetch origin
  368  git rebase origin/main
  369  docker ps
  370  docker ps -a
  371  date
  372  ll
  373  cd MeasurementsDTs/
  374  ll
  375  git status
  376  git log
  377  exit
  378  nvtop
  379  cd MeasurementsDTs/
  380  ll
  381  cd
  382  ll
  383  cd MeasurementsDTs/
  384  ll
  385  rm -f out/
  386  rm -rf out/
  387  yt-dlp -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]" -o "output.mp4" https://www.youtube.com/watch?v=RXABo9hm8B8 --verbose
  388  ll
  389  rm output.f140.m4a 
  390  rm output.f614.mp4 
  391  ll
  392  yt-dlp -f "bestvideo[ext=mp4]" -o "output.mp4" https://www.youtube.com/watch?v=RXABo9hm8B8 --verbose
  393  ll
  394  nvtop
  395  htop
  396  nvtop
  397  mv output.mp4 input_video.mp4
  398  ffmpeg -i input_video.mp4 -c:v libx264 -c:a aac -strict experimental -movflags +faststart output_video.mp4
  399  ll
  400  nvtop 
  401  docker ps
  402  docker ps -a
  403  docker container list
  404  docker container rm 82afd7a873a3
  405  df -h
  406  docker system prune
  407  history | grep docker
  408  sudo docker run --shm-size=10g -it --runtime=nvidia --gpus all alphapose_cuda12.1_ubuntu20.04:latest bash
  409  docker ps
  410  sudo docker run --shm-size=10g -it --runtime=nvidia --gpus all pytorch_cuda12.1_alphapose:latest bash
  411  ll
  412  docker ps
  413  nsys
  414  nsys status --environment
  415  cd
  416  ll
  417  mv video.mp4 MeasurementsDTs/video.mp4
  418  ll
  419  cd MeasurementsDTs/
  420  ll
  421  cd
  422  mv video-for-pose-detection-1-1080x1920-30fps.mp4 MeasurementsDTs/video.mp4
  423  cd MeasurementsDTs/
  424  nvtop
  425  history | nvidia-smi
  426  history | grep nvidia-smi
  427  curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux.tar.gz
  428  tar -xvf ds.tar.gz
  429  mv  dist_linux/slim /usr/local/bin/
  430  mv  dist_linux/slim-sensor /usr/local/bin/
  431  sudo mv  dist_linux/slim-sensor /usr/local/bin/
  432  sudo mv dist_linux/slim /usr/local/bin/
  433  sudo mv dist_linux/docker-slim /usr/local/bin/
  434  sudo mv dist_linux/mint-sensor /usr/local/bin/
  435  cd MeasurementsDTs/
  436  docker-slim
  437  ll
  438  ll out/
  439  rm -rf out/
  440  rm dive_0.13.1_linux_amd64.deb 
  441  cd
  442  curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
  443  docker-slim build --http-probe=false --entrypoint 'python3 main.py --method alphapose --input unit_tests/video/giphy.gif --save_image --json' pytorch_cuda12.1_hpe:latest
  444  docker ps
  445  docker image ls
  446  exit
  447  source myenv/bin/activate
  448  python3 main.py --method alphapose --input unit_tests/images/ --json
  449  python3 main.py --method alphapose --input unit_tests/video/giphy.gif  --json
  450  ll
  451  python3 main.py --method alphapose --input output.mp4  --json
  452  python3 main.py --method movenet --input output.mp4  --json
  453  gdown --id 15SZwY2jAh1KqHwT-YO6_UByOsQD70RSr models/MoveNet/movenet_multipose_lightning_256x256_FP32.bin
  454  gdown --id 15SZwY2jAh1KqHwT-YO6_UByOsQD70RSr -O models/MoveNet/movenet_multipose_lightning_256x256_FP32.bin
  455  python3 main.py --method movenet --input output.mp4  --json
  456  python3 main.py --method alphapose --input output.mp4  --json
  457  apt  install ffmpeg
  458  sudo apt  install ffmpeg
  459  python3 main.py --method movenet --input output_video.mp4  --json
  460  python3 main.py --method alphapose  --input output_video.mp4  --json
  461  ll
  462  rm input_video.mp4 
  463  rm output_video.mp4 
  464  ll
  465  rm -rf out/
  466  ll
  467  python3 main.py --method alphapose --input unit_tests/video/giphy.gif  --json
  468  clear
  469  docker system prune
  470  python3 main.py --help
  471  ll
  472  clear
  473  pwd
  474  nsys profile -o alphapose_profile bash -c "python main.py --method alphapose --input unit_tests/video/giphy.gif --save_image --json"
  475  nsys profile -o alphapose_profile python main.py --method alphapose --input unit_tests/video/giphy.gif --json
  476  cp /tmp/nsys-report-ce05.nsys-rep .
  477  sudo nsys profile -o alphapose_profile python main.py --method alphapose --input unit_tests/video/giphy.gif --json
  478  sudo nsys profile -o alphapose_profile python3 main.py --method alphapose --input unit_tests/video/giphy.gif --json
  479  nsys profile -o alphapose_profile python3 main.py --method alphapose --input unit_tests/video/giphy.gif --json
  480  nsys profile -o alphapose_profile python3 main.py --method alphapose --input video.mp4 --json
  481  nsys profile --gpu-metrics-devices all -o alphapose_profile python3 main.py --method alphapose --input unit_tests/video/giphy.gif --json
  482  nsys profile --gpu-metrics-devices all python3 main.py --method alphapose --input unit_tests/video/giphy.gif --json
  483  nsys profile --gpu-metrics-devices=help
  484  nsys profile --help
  485  nsys
  486  nsys --version
  487  sudo nsys profile --gpu-metrics-devices=help
  488  nsys status --environment
  489  nsys profile python3 main.py --method alphapose --input video.mp4 --json
  490  DIVE_VERSION=$(curl -sL "https://api.github.com/repos/wagoodman/dive/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
  491  curl -fOL "https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb"
  492  sudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb
  493  docker ps 
  494  docker image ls
  495  docker rmi 626fe456413d
  496  docker image ls
  497  dive pytorch_cuda12.1_hpe:latest
  498  df -h
  499  docker system prune
  500  df -h
  501  docker image ls
  502  docker-slim build --http-probe=false --entrypoint 'python3 main.py --method alphapose --input unit_tests/video/giphy.gif --save_image --json' pytorch_cuda12.1_hpe:latest
  503  slim build --http-probe=false --entrypoint 'python3 main.py --method alphapose --input unit_tests/video/giphy.gif --save_image --json' pytorch_cuda12.1_hpe:latest
  504  ll /usr/local/bin/ | grep slim
  505  docker-slim
  506  tar -xvf ds.tar.gz
  507  mv  dist_linux/slim /usr/local/bin/
  508  sudo mv dist_linux/slim /usr/local/bin/
  509  /bin/python3 /home/user/.vscode-server/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/user/.vscode-server/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/bash/envVars.txt
  510  watch -n 1 nvidia-smi
  511  cd MeasurementsDTs/
  512  ll
  513  nsys stats app_profile.nsys-rep 
  514  nvidia-smi dmon -s u
  515  ncu-ui
  516  ncu
  517  sudo apt install linux-perf
  518  sudo apt-cache search  linux-perf
  519  sudo apt-cache search  perf
  520  sudo apt install linux-tools-generic
  521  perf
  522  perf list | grep intel
  523  perf list
  524  docker run -d --gpus all --rm -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:3.3.7-ubuntu20.04 -c 500
  525  docker run -d --gpus all --rm -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:4.2.3-4.1.1-ubuntu22.04 -c 500
  526  dcgmi discovery --list
  527  curl localhost:9400/metrics
  528  docker run -d --name prometheus   -p 9090:9090   -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml   prom/prometheus
  529  docker run -d --name=grafana -p 3000:3000 grafana/grafana
  530  docker ps
  531  docker ps -a
  532  docker container list
  533  docker run -d --gpus all --rm dcgm-exporter -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:4.2.3-4.1.1-ubuntu22.04 -c 500
  534  docker run -d --gpus all --rm --name dcgm-exporter -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:4.2.3-4.1.1-ubuntu22.04 -c 500
  535  docker run -d --name prometheus   -p 9090:9090   -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml   prom/prometheus
  536  docker run -d --gpus all --cap-add SYS_ADMIN --rm --name dcgm-exporter -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:4.2.3-4.1.1-ubuntu22.04 -c 500
  537  curl http://localhost:9400/metrics | grep "DCGM_FI_DEV_GPU_UTIL\|DCGM_FI_DEV_FB_USED"
  538  docker run -d -p 8888:8888 nvcr.io/nvidia/tensorflow:23.10-tf2-py3 /usr/local/bin/jupyter lab --allow-root --ip=* --port=8888 --no-browser --NotebookApp.token='' --NotebookApp.allow_origin='*' --notebook-dir=/workspace
  539  nsys profile --trace=cuda,nvtx,osrt,mem \  --capture-range=cudaProfilerApi \  --output=app_profile python3 main.py --method alphapose --input video.mp4 --json
  540  nsys profile   --trace=cuda,nvtx,osrt   --capture-range=cudaProfilerApi   --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  541  source myenv/bin/activate
  542  nsys profile   --trace=cuda,nvtx,osrt   --capture-range=cudaProfilerApi   --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  543  nsys profile --trace=cuda,nvtx,osrt --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  544  nvidia-smi -L
  545  nvidia-smi --query-gpu=utilization.gpu --format=csv,nounits,noheader
  546  nsys profile --trace=cuda,nvtx,osrt --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  547  docker ps
  548  clear
  549  nsys profile --trace=cuda,nvtx,osrt --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  550  nvtop
  551  pwd
  552  ll
  553  cd MeasurementsDTs/
  554  ll
  555  curl http://localhost:9400/metrics | grep "GPU_UTIL\|FB_USED"
  556  curl -s http://localhost:9400/metrics | grep "DCGM_FI_DEV_GPU_UTIL"
  557  nsys profile --trace=cuda,nvtx,osrt --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  558  source myenv/bin/activate
  559  nsys profile --trace=cuda,nvtx,osrt --output=app_profile   python3 main.py --method alphapose --input video.mp4 --json
  560  docker-compose up -d prometheus
  561  docker-compose 
  562  python3 main.py --method alphapose --input video.mp4 --json
  563  source myenv/bin/activate && python3 main.py --method alphapose --input vide
  564  source myenv/bin/activate && python3 main.py --method alphapose --input video.mp4  --json
  565  git diff --stat origin/main
  566  git log origin/main..HEAD
  567  git diff main
  568  git status
  569  nvidia-smi dmon -s u
  570  dcgmi discovery --list
  571  sudo apt-get install -y datacenter-gpu-manager
  572  sudo apt update
  573  sudo apt-get install -y datacenter-gpu-manager
  574  dpkg-query -W -f='${Version}\n' 'nvidia-driver-*' | grep -v '^nvidia-driver-common' | head -n1
  575  sudo dpkg --list datacenter-gpu-manager &> /dev/null &&   sudo apt purge --yes datacenter-gpu-manager
  576  sudo dpkg --list datacenter-gpu-manager-config &> /dev/null &&   sudo apt purge --yes datacenter-gpu-manager-config
  577  CUDA_VERSION=$(nvidia-smi | sed -E -n 's/.*CUDA Version: ([0-9]+)[.].*/\1/p')
  578  sudo apt-get update
  579  sudo apt-get install --yes                        --install-recommends                        datacenter-gpu-manager-4-cuda${CUDA_VERSION}
  580  sudo apt install --yes datacenter-gpu-manager-4-dev
  581  nvidia-smi dmon --help
  582  nvidia-smi dmon -s u -o DT
  583  nvidia-smi dmon -s u -o DT -d 0.5
  584  nvidia-smi dmon -s u -o DT -d 0.5sec
  585  nvidia-smi dmon -s u -o DT -d 
  586  nvidia-smi dmon -s u -o DT
  587  exit
  588  cd MeasurementsDTs/
  589  curl -s http://localhost:9400/metrics | grep "DCGM_FI_DEV_GPU_UTIL"
  590  docker-compose up -d prometheus
  591  sudo apt install docker-compose
  592  docker-compose up -d prometheus
  593  docker-compose -f docker-compose.yml up -d prometheus
  594  curl -s http://localhost:9400/metrics | head -n 1
  595  curl -s http://localhost:9400/metrics
  596  curl -s http://localhost:9400/metrics | head -n 1
  597  sudo apt-get install bpfcc-tools linux-headers-$(uname -r)
  598  bcc
  599  opensnoop-bpfcc 
  600  bpfc
  601  top -bn1 | grep 'Cpu(s)'
  602  cat /proc/sys/kernel/perf_event_paranoid
  603  sudo sysctl -w kernel.perf_event_paranoid=1
  604  nsenter 
  605  exit]
  606  exit
  607  cd MeasurementsDTs/
  608  source myenv/bin/activate
  609  python3 main.py --method alphapose --input video.mp4
  610  exit
  611  cd MeasurementsDTs/
  612  grok_mon.py
  613  vim grok_mon.py
  614  ll
  615  vim grok_mon.py 
  616  df -h
  617  docker image list
  618  history 
  619  history > hist.txt
