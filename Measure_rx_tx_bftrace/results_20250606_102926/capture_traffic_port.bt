#!/usr/bin/bpftrace
// This script monitors network traffic filtered by port number
// Usage: sudo ./capture_traffic_port.bt -p <port_number>

// Global variables
@target_port = $port;

BEGIN {
    printf("Tracing network traffic on port %d. Ctrl-C to stop\n", @target_port);
    @start_ns = nsecs;
}

// Helper function to get port number from socket
function get_port(sock: int): int
{
    // Get socket address using kernel's sock_common_get_port
    return sock_common_get_port(sock);
}

// Receive Traffic Monitoring
kprobe:sock_recvmsg
{
    // Get port number from socket
    $port = get_port(arg0);
    
    // Only track if it matches our target port
    if ($port == @target_port) {
        @sock_recvmsg[tid] = arg0;
        @container_info[tid] = sprintf("%s (%d)", comm, pid);
        @port_info[tid] = $port;
    }
}

kretprobe:sock_recvmsg
{
    if (retval > 0 && exists(@port_info[tid])) {
        @recv_bytes[pid, comm] += retval;
        @port_recv_bytes[pid, comm] += retval;
    }
    delete(@sock_recvmsg[tid]);
    delete(@container_info[tid]);
    delete(@port_info[tid]);
}

// Send Traffic Monitoring
kprobe:sock_sendmsg
{
    // Get port number from socket
    $port = get_port(arg0);
    
    // Only track if it matches our target port
    if ($port == @target_port) {
        @sock_sendmsg[tid] = arg0;
        @container_info[tid] = sprintf("%s (%d)", comm, pid);
        @port_info[tid] = $port;
    }
}

kretprobe:sock_sendmsg
{
    if (retval > 0 && exists(@port_info[tid])) {
        @send_bytes[pid, comm] += retval;
        @port_send_bytes[pid, comm] += retval;
    }
    delete(@sock_sendmsg[tid]);
    delete(@container_info[tid]);
    delete(@port_info[tid]);
}

interval:ms:10
{
    printf("TIME: %d\n", nsecs - @start_ns);
    printf("RX (Port %d):\n", @target_port);
    print(@port_recv_bytes);
    printf("TX (Port %d):\n", @target_port);
    print(@port_send_bytes);
    printf("---\n");
    clear(@recv_bytes);
    clear(@send_bytes);
    clear(@port_recv_bytes);
    clear(@port_send_bytes);
}

END {
    clear(@recv_bytes);
    clear(@send_bytes);
    clear(@port_recv_bytes);
    clear(@port_send_bytes);
}
