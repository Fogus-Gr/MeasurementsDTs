TODO: Network Traffic Monitoring Project

Current Status:
- BPFtrace script is running but only capturing 2 seconds of data
- Traffic data is being collected but not for the full 60-second duration
- Last working script used kprobe:sock_recvmsg and kprobe:sock_sendmsg
- Need to verify if script is running for full duration
- Need to add proper error handling and logging

Next Steps:

1. Core Functionality
   - Verify script runs for full 60 seconds
   - Add debug output to track progress
   - Implement proper error handling
   - Add validation to ensure correct process tracking

2. BPFtrace Script Enhancements
   - Container and Process Tracking:
     - Add container ID tracking
     - Track process start/end times
     - Add connection state tracking
     - Monitor network interface usage

   - Traffic Metrics:
     - Track packet sizes and counts
     - Add protocol identification
     - Track connection durations
     - Add latency measurements
     - Monitor buffer sizes
     - Track retransmissions
     - Add error statistics
     - Track concurrent connections

   - Network Performance:
     - Add bandwidth usage per interface
     - Monitor packet loss
     - Track flow control events
     - Add congestion window tracking
     - Monitor TCP window scaling
     - Track packet sequence numbers

3. Testing and Validation
   - Testing Strategy:
     - Run with different interval times (10ms, 100ms, 1s)
     - Test with different traffic patterns
     - Verify data consistency across runs

   - Data Validation:
     - Verify total traffic matches expected values
     - Check for data loss or gaps
     - Validate timestamp accuracy
     - Monitor system load during tracing


5. Alternative Approaches
   - Use uprobes instead of kprobes
   - Try different kernel tracepoints
   - Consider using eBPF maps for data collection
   - Test with different data collection frequencies

6. Performance Optimization
   - Optimize data collection frequency
   - Evaluate impact on network performance
   - Monitor system load during tracing
   - Consider packet processing overhead

7. Data Analysis
   - Update analyze_traffic_report.py
   - Add data validation checks
   - Handle partial data scenarios
   - Add statistical analysis capabilities

8. Cleanup and Standardization
   - Clean up unused code
   - Standardize script structure
   - Add proper error handling
   - Document all functions and features

Start with:
1. Verify script duration (60 seconds)
2. Add debug output and error handling
3. Test with different intervals
4. Add container/process tracking
5. Implement data validation checks
